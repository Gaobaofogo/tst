#!/usr/bin/env python
# coding: utf-8
# TST config
# (C) 2012-2014 Dalton Serey / UFCG
#
# TST Commit -- Permite salvar uma nova versÃ£o do programa.

from __future__ import print_function
from __future__ import unicode_literals

import sys

import tstlib as tst

LRED = '\033[1;31m'
LGREEN = '\033[1;32m'
GREEN="\033[9;32m"
WHITE="\033[1;37m"
LCYAN = '\033[1;36m'
RESET = '\033[0m'

FIELDS = ['user', 'group', 'url', 'output', 'domain', 'debug']

# read config
config = tst.Config()

# one-line-help
if len(sys.argv) > 1 and sys.argv[1] == '--one-line-help':
    print("configure tst")
    sys.exit()

# help
if len(sys.argv) > 1 and sys.argv[1] == '--help':
    print("usage: tst config [<property> <value>]")
    print("configurable properties: %s" % ", ".join(FIELDS))
    sys.exit()

# deal with config command arguments
sys.argv.pop(0)
if len(sys.argv) == 0:
    # no arguments: print all config values
    for prop in FIELDS:
        if prop in config:
            msg = "%s: %s%s" % (prop, LGREEN, config[prop]) + RESET
            print(msg)
    sys.exit(0)

elif len(sys.argv) == 1:
    # single argument: print config[argument]
    prop = sys.argv[0]
    if prop in config:
        msg = "%s: %s%s" % (prop, LGREEN, config[prop]) + RESET
    else:
        msg = "property '%s' not configured" % prop
    print(msg)
    sys.exit()

else:
    # two arguments
    if sys.argv[0] == "--unset":
        prop = sys.argv[1]

        # check property
        if prop not in FIELDS:
            msg = LRED + "tst: cannot configure '%s'" % prop + RESET
            print(msg, file=sys.stderr)
            sys.exit(1)

        if prop in config:
            config.pop(prop)
            config.save()
        
    else:
        prop, value = sys.argv[0], sys.argv[1]

        # check property
        if not prop in FIELDS:
            msg = LRED + "tst: cannot configure '%s'" % prop + RESET
            print(msg, file=sys.stderr)
            sys.exit(1)

        config[prop] = value
        config.save()
        msg = "%s: %s%s" % (prop, LGREEN, config[prop]) + RESET
        print(msg)
