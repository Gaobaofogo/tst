#!/usr/bin/env python
# coding: utf-8
# TST-Online Checkout
# (C) 2016 Dalton Serey / UFCG

from __future__ import print_function
from __future__ import unicode_literals

import json
import os
import sys
import codecs
import md5

import tstlib as tst
from tstlib import data2json

def help():
    print("usage: tst-checkout [name]")
    sys.exit(1)


def mkdirs(dirname):
    try: 
        os.makedirs(dirname)
        return True
    except OSError:
        if not os.path.isdir(dirname):
            raise


def activity_url(iid):
    activities_endpoint = config['url'] + "/api/activity"
    return "%s/%s" % (activities_endpoint, str(iid))


def main(text_in_file):

    # read tst.json, if any
    TSTJSON = './tst.json'
    if os.path.exists(TSTJSON):
        if len(sys.argv) > 1:
            print("You can't checkout an activity inside another.")
            print("To checkout this activity and overwrite it, use:")
            print("  - `tst checkout --overwrite`")
            sys.exit(1)
        tstjson = tst.read_tstjson(quit_on_fail=True)
        text_in_file = text_in_file or tstjson.get('text_in_file', False)
        name = tstjson['name']

        # calculate delta bewteen directory and checked out version
        activity, unknown = tst.read_activity(tstjson)
        changes = tst.activity_changes(activity, tstjson)
        if not overwrite and changes and set(changes.keys()) - set(['unknown']):
            print("Sorry, this activity has local changes. Use:")
            print("  - `tst status` to see changes")
            print("  - `tst checkout --overwrite` to discarding changes")
            sys.exit()
        
        directory = '.'
    else:
        if len(sys.argv) < 2:
            help()
            sys.exit(1)
        name = sys.argv[1]
        if len(sys.argv) > 2:
            directory = sys.argv[2]
        else:
            directory = name

    # define object kind
    kind = 'assignment' if name.isdigit() else 'activity'

    # request object data
    server = tst.Server()
    url = activity_url(name)
    response = server.get(url)
    try:
        response_json = response.json()
    except:
        print(response.stdout)
        print(response.stderr)
        sys.exit(1)

    # inspect response
    if config['user'] != response_json['owner'] and config['user'] not in response_json['collaborators']:
        print("tst: fatal: you have no permission to checkout this activity")
        sys.exit(1)

    # change to activity directory
    if not os.path.exists(directory):
        mkdirs(directory)
    os.chdir(directory)

    # save using proper save function
    save = tst.get_save_function(kind)
    save(response_json, text_in_file, is_checkout=True)


# main
if __name__ == "__main__":
    if sys.argv[-1] == '--one-line-help':
        print("update tst objects")
        sys.exit()

    text_in_file = False
    if sys.argv[-1] == '--text-in-file':
        text_in_file = True
        sys.argv.pop()

    overwrite = False
    if sys.argv[-1] == '--overwrite':
        overwrite = True
        sys.argv.pop()

    config = tst.read_config(exit=True)
    main(text_in_file)
