#!/usr/bin/env python
# coding: utf-8
# TST-Online Checkout
# (C) 2016 Dalton Serey / UFCG

from __future__ import print_function
from __future__ import unicode_literals

import json
import yaml
import os
import sys
import codecs
import md5
import difflib

import tstlib as tst
from tstlib import data2json

def help():
    print("usage: tst-commit [name]")
    sys.exit(1)


def activity_url(iid):
    activities_endpoint = config['url'] + "/api/activity"
    return "%s/%s" % (activities_endpoint, str(iid))


def activity_differ(activity, tstjson):
    fields = ["text", "tests", "files", "label", "type"]
    patches = {}
    for field in fields:
        if tstjson[field] != activity[field]:
            if isinstance(tstjson[field], basestring):
                patches[field] = "changed"
                continue
            if type(tstjson[field]) == dict:
                patches[field] = {}
                for key, value in tstjson[field].items():
                    if tstjson[field][key] != activity[field][key]:
                        patches[field][key] = "changed"

    d = difflib.ndiff(activity['tests'], tstjson['tests'])
    patches['tests_in'] = []
    line = 0
    for e in d:
        if e[0] in " +-":
            patches['tests_in'].append((line, e[0], e[2:]))
        if e[0] == '-':
            line -= 1
        line += 1

    return patches

                    
def read_activity(name):

    # gather activity data
    activity = {}
    
    # read activity yaml
    yamlfilename = name + '.yaml'
    with codecs.open(yamlfilename, mode='r', encoding='utf-8') as y:
        yamlfile = yaml.load(y.read())

    # read name, label, tests and files
    activity['name'] = yamlfile['name']
    activity['label'] = yamlfile['label']
    activity['type'] = yamlfile['type']
    activity['tests'] = [md5.md5(json.dumps(t, sort_keys=True)).hexdigest() for t in yamlfile['tests']]
    activity_files = ('tst.json', activity['name'] + '.md', activity['name'] + '.yaml')
    files = [f for f in os.listdir('.') if f not in activity_files and os.path.isfile(f)]
    activity['files'] = {file:None for file in files}

    # read text
    if '\n' in yamlfile['text']:
        activity['text'] = yamlfile['text']
    else:
        mdfile = yamlfile['text']
        with codecs.open(mdfile, mode='r', encoding='utf-8') as md:
            activity['text'] = md5.md5(md.read().encode('utf-8')).hexdigest()
    
    # read contents of files
    for filename in activity['files'].keys():
        if not os.path.isfile(filename):
            continue
        with codecs.open(filename, mode='r', encoding='utf-8') as f:
            activity['files'][filename] = md5.md5(f.read().encode('utf-8')).hexdigest()

    return activity


def main():

    # read tst.json
    TSTJSON = './tst.json'
    if not os.path.exists(TSTJSON):
        print('tst: this is not a tst directory')
        sys.exit(1)

    tstjson = tst.read_tstjson(quit_on_fail=True)

    # check for updates
    server = tst.Server()
    url = activity_url(tstjson['iid']) + "/version"
    version = server.get(url).stdout
    if version != tstjson['version']:
        print("Update available: %s => %s" % (tstjson['version'], version))
        print("Run `tst checkout`")
        sys.exit(0)

    # read activity
    activity = read_activity(tstjson['name'])

    # identify changed fields
    changes = activity_differ(activity, tstjson)

    #print(data2json(changes).encode('utf-8'))
    print(data2json(activity).encode('utf-8'))

# main
if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == '--one-line-help':
        print("record local changes to the repository")
        sys.exit()

    config = tst.read_config(exit=True)
    main()
