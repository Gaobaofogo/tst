#!/usr/bin/env python
# coding: utf-8
# TST-Online Checkout
# (C) 2016 Dalton Serey / UFCG

from __future__ import print_function
from __future__ import unicode_literals

import json
import yaml
import os
import sys
import codecs
import md5
import difflib

import tstlib as tst
from tstlib import show

try:
    from cStringIO import StringIO
except:
    from StringIO import StringIO


def help():
    print("usage: tst-commit [name]")
    sys.exit(1)


def activity_url(iid):
    activities_endpoint = config['url'] + "/api/activity"
    return "%s/%s" % (activities_endpoint, str(iid))


def bump_patch(version):
    major, minor, patch = map(int, version.split("."))
    patch += 1
    return "%d.%d.%d" % (major, minor, patch)


def bump_minor(version):
    major, minor, patch = map(int, version.split("."))
    minor += 1
    patch = 0
    return "%d.%d.%d" % (major, minor, patch)


def bump_major(version):
    major, minor, patch = map(int, version.split("."))
    major += 1
    minor = 0
    patch = 0
    return "%d.%d.%d" % (major, minor, patch)


def report(changes):
    if not changes:
        return ""

    text = StringIO()

    # add textual contents changes
    text_fields = ['name', 'label', 'type', 'text']
    if any(e in changes.keys() for e in text_fields):
        text.write("## Fields changed\n\n")
        for f in text_fields:
            if f in changes.keys():
                text.write("  - %s\n" % f)
        text.write('\n')

    # add removed tests
    removed = [i for i in xrange(len(changes.get('tests', []))) if changes['tests'][i][0] == '-']
    if removed:
        text.write("## Tests removed\n\n")
        for i in removed:
            text.write('  - test #%d: %s\n' % (changes['tests'][i][2], changes['tests'][i][1]))
        text.write('\n')
        
    # add added tests
    added = [i for i in xrange(len(changes.get('tests', []))) if changes['tests'][i][0] == '+']
    if added:
        text.write("## Tests added\n\n")
        for i in added:
            text.write('  - test #%d: %s\n' % (changes['tests'][i][2], changes['tests'][i][1]))
        text.write('\n')
        
    # add files changed
    if 'files' in changes:
        text.write("## Files changed/added\n\n")
        for filename in changes['files']:
            text.write('- %s\n' % filename)
        text.write('\n')

    # add unknown files
    if 'unknown' in changes:
        text.write("## Unknown files\n\n")
        for fn in changes['unknown']:
            text.write('  - %s\n' % fn)
        text.write("\n  Use `tst add <file>` to add file to the activity.\n")
        text.write("  Or type `tst clean` to remove all unknown files.\n\n")

    return text.getvalue()


def main():

    # read tst.json
    TSTJSON = './tst.json'
    if not os.path.exists(TSTJSON):
        print('This is not a tst directory.')
        sys.exit(1)

    tstjson = tst.read_tstjson(quit_on_fail=True)

    # check for updates
    if check_server:
        server = tst.Server()
        url = activity_url(tstjson['iid']) + "/version"
        server_version = server.get(url).json()
        if server_version['version_token'] != tstjson['version_token']:
            print("Update available: %s => %s" % (tstjson['version'], version['version']))
            print("Run `tst checkout` to update local copy")
            sys.exit(0)

    # read activity
    activity = tst.read_activity(tstjson)

    # calculate delta bewteen directory and checked out version
    changes = tst.activity_differ(activity, tstjson)

    print("# Activity '%s'\n" % tstjson['name'])
    print(report(changes), end='')

    if changes is None:
        print('Activity is up-to-date with the server.')
        print('Nothing to commit.')
    elif changes.keys() == ['unknown']:
        print('Activity is up-to-date with the server.')
        print('However, there are unknown files in the activity directory.')
    else:
        print('You have not saved changes to commit. Use:')
        print('  - `tst commit` to save changes')
        print('  - `tst checkout --overwrite` to discard changes')

# main
if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == '--one-line-help':
        print("record local changes to the repository")
        sys.exit()

    check_server = False
    if len(sys.argv) > 1 and sys.argv[1] == '--check-server':
        check_server = True

    if len(sys.argv) > 1 and sys.argv[-1] == '-D':
        tst.DEBUG = True
        sys.argv.pop()

    config = tst.read_config(exit=True)
    main()
