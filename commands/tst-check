#!/usr/bin/env bash
# TST check
# (C) 2017 Dalton Serey / UFCG

LRED="\033[1;31m"
LBLUE="\033[1;34m"
LGREEN="\033[1;32m"
LYELLOW="\033[1;33m"
RESET="\033[0m"

function clean_pattern {
    pattern=$(echo "$pattern" | sed "s/\[\[:space:\]\]//;s/*//;s/\<//;s/\>//;s/\\\//g;s/\.\*/ â€¦ /g")
}

function print {
    COLOR=$2
    if [[ "$COLOR" == "" ]]; then
        COLOR=$NORMAL
    fi
    echo -n -e $COLOR"$1"$RESET
}

if [[ "$1" == "" ]]; then
    if ls *.py 1> /dev/null 2>&1; then
        FILES=(*.py)
    else
        print $LRED"no files to check\n"$RESET
        exit
    fi
else
    FILES=($1)
fi

if [[ -d "check.json" ]]; then
    # read patterns from json
    print $LRED"tbd... (remove check.json)"$RESET

else
    patterns=(
        "sum\>[[:space:]]*(.*)"
        "split\>[[:space:]]*(.*)"
        "sort\>[[:space:]]*(.*)"
        "remove\>[[:space:]]*(.*)"
        "insert\>[[:space:]]*(.*)"
        "replace\>[[:space:]]*(.*)"
        "count\>[[:space:]]*(.*)"
        "index\>[[:space:]]*(.*)"
        "map\>[[:space:]]*(.*)"
        "sort\>[[:space:]]*(.*)"
        "sorted\>[[:space:]]*(.*)"
        "extend\>[[:space:]]*(.*)"
        "min\>[[:space:]]*(.*)"
        "max\>[[:space:]]*(.*)"
        "join\>[[:space:]]*(.*)"
        "insert\>[[:space:]]*(.*)"
        "remove\>[[:space:]]*(.*)"
        "reverse\>[[:space:]]*(.*)"
        "clear\>[[:space:]]*(.*)"
        "copy\>[[:space:]]*(.*)"
        "del"
        "try"
        "\[.*for.*\]"
        "if.*\<in\>"
        "\[.*:.*\]"
    )
fi

for file2check in "${FILES[@]}"; do
    found=""
    for pattern in "${patterns[@]}"; do
        found=$(grep $pattern $file2check)
        if [[ "$found" != "" ]]; then
            clean_pattern $pattern
            print $LRED"!"$RESET" $file2check uses <$LYELLOW$pattern$RESET>\n"
        fi
    done
done

